---
- hosts: localhost
  gather_facts: no
  connection: local
  tasks:
  - name: Create container
    lxd_container:
      name: nameserver
      state: started
      source:
        type: image
        mode: pull
        server: https://images.linuxcontainers.org
        protocol: lxd
        alias: alpine/edge/amd64
      devices: "{{ lxd_devices }}"
      config: "{{ lxd_config }}"
      profiles: "{{ lxd_profile }}"
      wait_for_ipv4_addresses: true

  - name: check python is installed in container
    raw: apk info -e python
    register: python_install_check
    changed_when: false
    failed_when: false
    delegate_to: nameserver
  - name: update package list
    raw: apk update
    when: python_install_check.rc == 1
    failed_when: false
    delegate_to: nameserver
  - name: install python in container
    raw: apk add python
    when: python_install_check.rc == 1
    delegate_to: nameserver

- hosts:
    - nameserver
  gather_facts: no
  tasks:
    - copy: src=profile_d_hardening.sh dest=/etc/profile.d/hardening.sh mode=0644 owner=root group=root
    - apk: name=bind state=present
    - template: src=named.conf.j2 dest=/etc/bind/named.conf mode=0644 owner=root group=root force=yes
      notify: reload named
    - get_url: url=ftp://ftp.intenic.net/domain/named.cache dest=/var/bind/named.ca mode=0644 owner=root group=root backup=yes
      notify: reload named
    - replace: path=/etc/conf.d/named regexp='^OPTS="(?!-4)((?:.(?!-4))*)"$' replace='OPTS="\1 -4"' mode=0644 owner=root group=root backup=yes
      when: not enable_ipv6
      notify: reload named
    - replace: path=/etc/conf.d/named regexp='^OPTS="(.*?)-4(.*?)"$' replace='OPTS="\1\2"' mode=0644 owner=root group=root backup=yes
      when: enable_ipv6
      notify: reload named
    - replace: path=/etc/conf.d/named regexp='^OPTS="\s*(\S*)\s*"$' replace='OPTS="\1"' mode=0644 owner=root group=root backup=yes
    - service: name=named state=started enabled=yes
  handlers:
    # state=reloaded does not work in Alpine: "named: function `reload' defined but does not exist"
    - name: reload named
      service: name=named state=restarted
